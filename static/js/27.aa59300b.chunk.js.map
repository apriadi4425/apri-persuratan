{"version":3,"sources":["../node_modules/@coreui/utils/src/get-css-custom-properties.js","../node_modules/@coreui/utils/src/get-style.js","views/dashboard/TableKategoriKomponent.js","../node_modules/@coreui/utils/src/hex-to-rgba.js","views/charts/MainChartExample.js","views/dashboard/Dashboard.js"],"names":["getCssCustomProperties","cssCustomProperties","sheets","document","styleSheets","cssText","i","length","rules","cssRules","j","selectorText","substring","lastIndexOf","split","forEach","property","name","value","trim","isIE1x","Boolean","documentMode","isCustomProperty","match","getStyle","style","element","body","window","getComputedStyle","getPropertyValue","replace","KategoriTableKomponent","React","memo","KategoriTable","className","map","list","index","key","nama_kategori","Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","November","Desember","hexToRgba","color","opacity","TypeError","r","g","b","hex","Error","parseInt","slice","brandSuccess","brandInfo","MainChartExample","attributes","User","JSON","parse","localStorage","getItem","useState","jumlah","chart","bulan","SuratKeluarChart","setSuratKeluarChart","SuratMasukChart","setSuratSuratMasukChart","SuratKeluar","field","tabel","set","a","status","axios","get","process","headers","Accept","Authorization","token","then","response","data","catch","error","console","log","useEffect","defaultDatasets","label","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","stepSize","Math","ceil","Number","max","elements","point","radius","hitRadius","hoverRadius","hoverBorderWidth","datasets","options","labels","WidgetsDropdown","lazy","Dashboard","myRef","useRef","setKategoriTable","KategoriTableMasuk","setKategoriTableMasuk","DataKategori","sm","id","onClick","current","scrollIntoView","height","marginTop","ref","xs","md","xl"],"mappings":"6KAMA,IAqCeA,EArCgB,WAI7B,IAHA,IAAMC,EAAsB,GACtBC,EAASC,SAASC,YACpBC,EAAU,GACLC,EAAIJ,EAAOK,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAE3C,IADA,IAAME,EAAQN,EAAOI,GAAGG,SACfC,EAAIF,EAAMD,OAAS,EAAGG,GAAK,EAAGA,IACrC,GAA8B,0BAA1BF,EAAME,GAAGC,aAA0C,CAErDN,EAAUG,EAAME,GAAGL,QACnB,MAIJ,GAAIA,EACF,MAmBJ,OAdAA,EAAUA,EAAQO,UAChBP,EAAQQ,YAAY,KAAO,EAC3BR,EAAQQ,YAAY,OAGdC,MAAM,KAAKC,SAAQ,SAAAC,GACzB,GAAIA,EAAU,CACZ,IAAMC,EAAOD,EAASF,MAAM,MAAM,GAC5BI,EAAQF,EAASF,MAAM,MAAM,GAC/BG,GAAQC,IACVjB,EAAoB,KAAD,OAAMgB,EAAKE,SAAYD,EAAMC,YAI/ClB,GCrCHmB,EAAS,kBAAMC,QAAQlB,SAASmB,eAAiBnB,SAASmB,cAD3C,IAEfC,EAAmB,SAAAP,GAAQ,OAAIA,EAASQ,MAAM,WAerCC,IAbE,SAACT,GAAsC,IAClDU,EADsBC,EAA4B,uDAAlBxB,SAASyB,KAG7C,GAAIL,EAAiBP,IAAaI,IAAU,CAC1C,IAAMnB,EAAsBD,IAC5B0B,EAAQzB,EAAoBe,QAE5BU,EAAQG,OAAOC,iBAAiBH,EAAS,MAAMI,iBAAiBf,GAAUgB,QAAQ,MAAO,IAG3F,OAAON,I,kHCgCMO,EADgBC,IAAMC,MA7CL,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC9B,OACI,yBAAKC,UAAU,oBACN,2BAAOA,UAAU,SACf,4BACE,oCACA,uCACA,wCACA,qCACA,qCACA,mCACA,oCACA,oCACA,uCACA,yCACA,uCACA,wCACA,yCAEF,+BAECD,EAAcE,KAAI,SAACC,EAAMC,GAAP,OAChB,wBAAIC,IAAKD,GACP,4BAAKD,EAAKG,eACV,4BAAKH,EAAKI,SACV,4BAAKJ,EAAKK,UACV,4BAAKL,EAAKM,OACV,4BAAKN,EAAKO,OACV,4BAAKP,EAAKQ,KACV,4BAAKR,EAAKS,MACV,4BAAKT,EAAKU,MACV,4BAAKV,EAAKW,SACV,4BAAKX,EAAKY,WACV,4BAAKZ,EAAKa,SACV,4BAAKb,EAAKc,UACV,4BAAKd,EAAKe,oB,oCCRnBC,EA5BG,SAACC,GAAyB,IAAlBC,EAAkB,uDAAR,IAClC,GAAqB,qBAAVD,EACT,MAAM,IAAIE,UAAU,4BAGtB,IAMIC,EACAC,EACAC,EAREC,EAAMN,EAAMhC,MAAM,4BAExB,IAAKsC,EACH,MAAM,IAAIC,MAAJ,UAAaP,EAAb,8BAiBR,OAVqB,IAAjBA,EAAMjD,QACRoD,EAAIK,SAASR,EAAMS,MAAM,EAAG,GAAI,IAChCL,EAAII,SAASR,EAAMS,MAAM,EAAG,GAAI,IAChCJ,EAAIG,SAASR,EAAMS,MAAM,EAAG,GAAI,MAEhCN,EAAIK,SAASR,EAAMS,MAAM,EAAG,GAAI,IAChCL,EAAII,SAASR,EAAMS,MAAM,EAAG,GAAI,IAChCJ,EAAIG,SAASR,EAAMS,MAAM,EAAG,GAAI,KAGlC,eAAeN,EAAf,aAAqBC,EAArB,aAA2BC,EAA3B,aAAiCJ,EAAU,IAA3C,MCtBIS,EAAezC,YAAS,YAAc,UACtC0C,EAAY1C,YAAS,SAAW,UAkGvB2C,GAjGK3C,YAAS,UAEJ,SAAA4C,GACvB,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SADR,EAEWC,mBAAS,CAACC,OAAS,GAAGC,MAAQ,GAAGC,MAAQ,KAFpD,mBAE9BC,EAF8B,KAEZC,EAFY,OAGcL,mBAAS,CAACC,OAAS,GAAGC,MAAQ,GAAGC,MAAQ,KAHvD,mBAG9BG,EAH8B,KAGbC,EAHa,KAM/BC,EAAW,uCAAG,WAAOC,EAAOC,EAAOC,GAArB,2BAAAC,EAAA,6DAA0BC,EAA1B,+BAAmC,KAAnC,SACZC,IAAMC,IAAN,UAAaC,gDAAb,wCAA2EP,EAA3E,kBAA0FC,EAA1F,mBAA0GG,GAAU,CACxHI,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYxB,EAAKyB,UAE/BC,MAAK,SAAAC,GACNX,EAAIW,EAASC,SACZC,OAAM,SAAAC,GACPC,QAAQC,IAAIF,MATI,2CAAH,0DAajBG,qBAAU,WACRpB,EAAY,gBAAiB,iBAAkBH,EAAqB,GACpEG,EAAY,iBAAkB,gBAAiBD,KAC/C,IAGF,IAAMsB,EAEG,CACL,CACEC,MAAO,oBACPC,gBAAiBnD,EAAUY,EAAW,IACtCwC,YAAaxC,EACbyC,0BAA2BzC,EAC3B0C,YAAa,EACbX,KAAMjB,EAAgBJ,OAExB,CACE4B,MAAO,mBACPC,gBAAiB,cACjBC,YAAazC,EACb0C,0BAA2B1C,EAC3B2C,YAAa,EACbX,KAAMnB,EAAiBF,QAKvBiC,EACG,CACHC,qBAAqB,EACrBC,OAAQ,CACNC,SAAS,GAEXC,OAAQ,CACNC,MAAO,CAAC,CACNC,UAAW,CACTC,iBAAiB,KAGrBC,MAAO,CAAC,CACNC,MAAO,CACLC,aAAa,EACbC,cAAe,EACfC,SAAUC,KAAKC,KAAKC,OAAO9C,EAAiBH,QAAU,GACtDkD,IAAKD,OAAO9C,EAAiBH,SAE/BwC,UAAW,CACTH,SAAS,MAIfc,SAAU,CACRC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,EACbC,iBAAkB,KAQ5B,OACE,kBAAC,IAAD,iBACM/D,EADN,CAEEgE,SAAU7B,EACV8B,QAASxB,EACTyB,OAAQxD,EAAiBD,WCjFzB0D,EAAkBC,gBAAK,kBAAM,kCAkGpBC,UAhGG,WAChB,IAAMC,EAAQC,iBAAO,MACftE,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAFvB,EAGoBC,mBAAS,IAH7B,mBAGfvC,EAHe,KAGAyG,EAHA,OAI8BlE,mBAAS,IAJvC,mBAIfmE,EAJe,KAIKC,EAJL,KAMhBC,EAAY,uCAAG,WAAO3D,EAAO0D,GAAd,SAAAxD,EAAA,sEACbE,IAAMC,IAAN,UAAaC,gDAAb,oCAAuEN,GAAS,CACpFO,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYxB,EAAKyB,UAE/BC,MAAK,SAAAC,GACN8C,EAAsB9C,EAASC,SAC9BC,OAAM,SAAAC,GACPC,QAAQC,IAAIF,MATK,2CAAH,wDAalBG,qBAAU,WACRyC,EAAa,iBAAkBH,GAC/BG,EAAa,gBAAiBD,KAC9B,IAIF,OACE,oCACE,kBAACP,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMS,GAAG,KACP,wBAAIC,GAAG,UAAU7G,UAAU,mBAA3B,0BACA,yBAAKA,UAAU,oBAAf,eAEF,kBAAC,IAAD,CAAM4G,GAAG,IAAI5G,UAAU,qBACrB,kBAAC,IAAD,CAASmB,MAAM,UAAUnB,UAAU,eACjC,kBAAC,IAAD,CAAOpB,KAAK,wBAEd,kBAAC,IAAD,CAAcoB,UAAU,oBAClB,kBAAC,IAAD,CACE8G,QAlBE,kBAAMR,EAAMS,QAAQC,kBAmBtB7F,MAAM,oBACNnB,UAAU,QAHZ,qBAUV,kBAAC,EAAD,CAAkBX,MAAO,CAAC4H,OAAQ,QAASC,UAAW,YAKhD,yBAAKC,IAAKb,GACV,kBAAC,KAAD,KACR,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,kCAGA,kBAAC,IAAD,KACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMc,GAAG,KAAKC,GAAG,KAAKC,GAAG,MACvB,kBAAC,EAAD,CAAwBvH,cAAeA,UAQnD,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,mCAGA,kBAAC,IAAD,KACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMqH,GAAG,KAAKC,GAAG,KAAKC,GAAG,MACvB,kBAAC,EAAD,CAAwBvH,cAAe0G","file":"static/js/27.aa59300b.chunk.js","sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * Licensed under MIT (https://coreui.io/license)\r\n * @returns {string} css custom property name\r\n * --------------------------------------------------------------------------\r\n */\r\nconst getCssCustomProperties = () => {\r\n  const cssCustomProperties = {}\r\n  const sheets = document.styleSheets\r\n  let cssText = ''\r\n  for (let i = sheets.length - 1; i > -1; i--) {\r\n    const rules = sheets[i].cssRules\r\n    for (let j = rules.length - 1; j > -1; j--) {\r\n      if (rules[j].selectorText === '.ie-custom-properties') {\r\n        // eslint-disable-next-line prefer-destructuring\r\n        cssText = rules[j].cssText\r\n        break\r\n      }\r\n    }\r\n\r\n    if (cssText) {\r\n      break\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line unicorn/prefer-string-slice\r\n  cssText = cssText.substring(\r\n    cssText.lastIndexOf('{') + 1,\r\n    cssText.lastIndexOf('}')\r\n  )\r\n\r\n  cssText.split(';').forEach(property => {\r\n    if (property) {\r\n      const name = property.split(': ')[0]\r\n      const value = property.split(': ')[1]\r\n      if (name && value) {\r\n        cssCustomProperties[`--${name.trim()}`] = value.trim()\r\n      }\r\n    }\r\n  })\r\n  return cssCustomProperties\r\n}\r\n\r\nexport default getCssCustomProperties\r\n","import getCssCustomProperties from './get-css-custom-properties'\r\n\r\nconst minIEVersion = 10\r\nconst isIE1x = () => Boolean(document.documentMode) && document.documentMode >= minIEVersion\r\nconst isCustomProperty = property => property.match(/^--.*/i)\r\n\r\nconst getStyle = (property, element = document.body) => {\r\n  let style\r\n\r\n  if (isCustomProperty(property) && isIE1x()) {\r\n    const cssCustomProperties = getCssCustomProperties()\r\n    style = cssCustomProperties[property]\r\n  } else {\r\n    style = window.getComputedStyle(element, null).getPropertyValue(property).replace(/^\\s/, '')\r\n  }\r\n\r\n  return style\r\n}\r\n\r\nexport default getStyle\r\n","import React from 'react';\r\n\r\nconst TableKategoriKomponentt = ({KategoriTable}) => {\r\n    return(\r\n        <div className='table-responsive'>\r\n                 <table className='table'>\r\n                   <tr>\r\n                     <td>Nama</td>\r\n                     <td>Januari</td>\r\n                     <td>Februari</td>\r\n                     <td>Maret</td>\r\n                     <td>April</td>\r\n                     <td>Mei</td>\r\n                     <td>Juni</td>\r\n                     <td>Juli</td>\r\n                     <td>Agustus</td>\r\n                     <td>September</td>\r\n                     <td>Oktober</td>\r\n                     <td>November</td>\r\n                     <td>Desember</td>\r\n                   </tr>\r\n                   <tbody>\r\n                   {\r\n                    KategoriTable.map((list, index) => (\r\n                      <tr key={index}>\r\n                        <td>{list.nama_kategori}</td>\r\n                        <td>{list.Januari}</td>\r\n                        <td>{list.Februari}</td>\r\n                        <td>{list.Maret}</td>\r\n                        <td>{list.April}</td>\r\n                        <td>{list.Mei}</td>\r\n                        <td>{list.Juni}</td>\r\n                        <td>{list.Juli}</td>\r\n                        <td>{list.Agustus}</td>\r\n                        <td>{list.September}</td>\r\n                        <td>{list.Oktober}</td>\r\n                        <td>{list.November}</td>\r\n                        <td>{list.Desember}</td>\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                   </tbody>\r\n                 </table>\r\n                 </div>\r\n    )\r\n}\r\n\r\nconst KategoriTableKomponent = React.memo(TableKategoriKomponentt);\r\nexport default KategoriTableKomponent;","/* eslint-disable no-magic-numbers */\r\nconst hexToRgba = (color, opacity = 100) => {\r\n  if (typeof color === 'undefined') {\r\n    throw new TypeError('Hex color is not defined')\r\n  }\r\n\r\n  const hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i)\r\n\r\n  if (!hex) {\r\n    throw new Error(`${color} is not a valid hex color`)\r\n  }\r\n\r\n  let r\r\n  let g\r\n  let b\r\n\r\n  if (color.length === 7) {\r\n    r = parseInt(color.slice(1, 3), 16)\r\n    g = parseInt(color.slice(3, 5), 16)\r\n    b = parseInt(color.slice(5, 7), 16)\r\n  } else {\r\n    r = parseInt(color.slice(1, 2), 16)\r\n    g = parseInt(color.slice(2, 3), 16)\r\n    b = parseInt(color.slice(3, 5), 16)\r\n  }\r\n\r\n  return `rgba(${r}, ${g}, ${b}, ${opacity / 100})`\r\n}\r\n\r\nexport default hexToRgba\r\n","import React, {useState, useEffect} from 'react'\r\nimport { CChartBar } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils/src'\r\nimport axios from 'axios';\r\nconst brandSuccess = getStyle('success') || '#4dbd74'\r\nconst brandInfo = getStyle('info') || '#20a8d8'\r\nconst brandDanger = getStyle('danger') || '#f86c6b'\r\n\r\nconst MainChartExample = attributes => {\r\n  const User = JSON.parse(localStorage.getItem('user'));\r\n  const [SuratKeluarChart, setSuratKeluarChart] = useState({jumlah : '',chart : [],bulan : []})\r\n  const [SuratMasukChart, setSuratSuratMasukChart] = useState({jumlah : '',chart : [],bulan : []})\r\n\r\n\r\n  const SuratKeluar = async (field, tabel, set, status = null) => {\r\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/api/data-surat-keluar?field=${field}&tabel=${tabel}&status=${status}`, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: `Bearer ${User.token}`\r\n      }\r\n    }).then(response => {\r\n      set(response.data)\r\n    }).catch(error => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    SuratKeluar('tanggal_surat', 't_surat_keluar', setSuratKeluarChart, 2)\r\n    SuratKeluar('tanggal_terima', 't_surat_masuk', setSuratSuratMasukChart)\r\n  },[])\r\n\r\n\r\n  const defaultDatasets = (()=>{\r\n  \r\n    return [\r\n      {\r\n        label: 'Data Surat Keluar',\r\n        backgroundColor: hexToRgba(brandInfo, 10),\r\n        borderColor: brandInfo,\r\n        pointHoverBackgroundColor: brandInfo,\r\n        borderWidth: 2,\r\n        data: SuratMasukChart.chart\r\n      },\r\n      {\r\n        label: 'Data Surat Masuk',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandSuccess,\r\n        pointHoverBackgroundColor: brandSuccess,\r\n        borderWidth: 2,\r\n        data: SuratKeluarChart.chart\r\n      },\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: true\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            gridLines: {\r\n              drawOnChartArea: false\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            ticks: {\r\n              beginAtZero: true,\r\n              maxTicksLimit: 5,\r\n              stepSize: Math.ceil(Number(SuratKeluarChart.jumlah) / 5),\r\n              max: Number(SuratKeluarChart.jumlah)\r\n            },\r\n            gridLines: {\r\n              display: true\r\n            }\r\n          }]\r\n        },\r\n        elements: {\r\n          point: {\r\n            radius: 0,\r\n            hitRadius: 10,\r\n            hoverRadius: 4,\r\n            hoverBorderWidth: 3\r\n          }\r\n        }\r\n      }\r\n    }\r\n  )()\r\n\r\n  // render\r\n  return (\r\n    <CChartBar\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={SuratKeluarChart.bulan}\r\n    />\r\n  )\r\n}\r\n\r\n\r\nexport default MainChartExample\r\n","import React, { lazy, useEffect, useState, useRef } from 'react'\r\nimport {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport KategoriTableKomponent from './TableKategoriKomponent';\r\nimport axios from 'axios';\r\n\r\nimport MainChartExample from '../charts/MainChartExample.js'\r\n\r\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\r\n\r\nconst Dashboard = () => {\r\n  const myRef = useRef(null);\r\n  const User = JSON.parse(localStorage.getItem('user'));\r\n  const [KategoriTable, setKategoriTable] = useState([])\r\n  const [KategoriTableMasuk, setKategoriTableMasuk] = useState([])\r\n\r\n  const DataKategori = async (tabel, setKategoriTableMasuk) => {\r\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/api/data-kategori?tabel=${tabel}`, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: `Bearer ${User.token}`\r\n      }\r\n    }).then(response => {\r\n      setKategoriTableMasuk(response.data)\r\n    }).catch(error => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    DataKategori('t_surat_keluar', setKategoriTable);\r\n    DataKategori('t_surat_masuk', setKategoriTableMasuk);\r\n  },[])\r\n\r\n  const executeScroll = () => myRef.current.scrollIntoView();\r\n\r\n  return (\r\n    <>\r\n      <WidgetsDropdown />\r\n      <CCard>\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol sm=\"5\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">Grafik Data Persuratan</h4>\r\n              <div className=\"small text-muted\">Tahun 2020</div>\r\n            </CCol>\r\n            <CCol sm=\"7\" className=\"d-none d-md-block\">\r\n              <CButton color=\"primary\" className=\"float-right\">\r\n                <CIcon name=\"cil-cloud-download\"/>\r\n              </CButton>\r\n              <CButtonGroup className=\"float-right mr-3\">\r\n                    <CButton\r\n                      onClick={executeScroll}\r\n                      color=\"outline-secondary\"\r\n                      className=\"mx-0\"\r\n                    >\r\n                      Kategori Surat\r\n                    </CButton>\r\n              </CButtonGroup>\r\n            </CCol>\r\n          </CRow>\r\n          <MainChartExample style={{height: '300px', marginTop: '40px'}}/>\r\n        </CCardBody>\r\n        \r\n      </CCard>\r\n\r\n                <div ref={myRef}>\r\n                <CRow>\r\n        <CCol>\r\n          <CCard>\r\n            <CCardHeader>\r\n              Data Kategori Surat Masuk\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol xs=\"12\" md=\"12\" xl=\"12\">\r\n                  <KategoriTableKomponent KategoriTable={KategoriTable}/>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol>\r\n          <CCard>\r\n            <CCardHeader>\r\n              Data Kategori Surat Keluar\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol xs=\"12\" md=\"12\" xl=\"12\">\r\n                  <KategoriTableKomponent KategoriTable={KategoriTableMasuk}/>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n                </div>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"],"sourceRoot":""}