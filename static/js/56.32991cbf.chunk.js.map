{"version":3,"sources":["views/notifications/alerts/Alerts.js"],"names":["Alerts","React","useState","visible","setVisible","xs","md","className","href","rel","target","color","closeButton","show","onShowChange","striped","value","Number","size","onClick"],"mappings":"0NAmLeA,UAtKA,WAAO,IAAD,EACWC,IAAMC,SAAS,IAD1B,mBACZC,EADY,KACHC,EADG,KAGnB,OACE,oCACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,cAEE,yBAAKC,UAAU,uBACb,uBAAGC,KAAK,8CAA8CC,IAAI,sBAAsBC,OAAO,SAASH,UAAU,sBACxG,2BAAOA,UAAU,cAAjB,WAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQI,MAAM,WAAd,gDAGA,kBAAC,IAAD,CAAQA,MAAM,aAAd,kDAGA,kBAAC,IAAD,CAAQA,MAAM,WAAd,gDAGA,kBAAC,IAAD,CAAQA,MAAM,UAAd,+CAGA,kBAAC,IAAD,CAAQA,MAAM,WAAd,gDAGA,kBAAC,IAAD,CAAQA,MAAM,QAAd,6CAGA,kBAAC,IAAD,CAAQA,MAAM,SAAd,8CAGA,kBAAC,IAAD,CAAQA,MAAM,QAAd,gDAMN,kBAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,cAEE,uCAAY,6CAAZ,sBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQK,MAAM,WAAd,mCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,kCAMA,kBAAC,IAAD,CAAQI,MAAM,aAAd,qCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,kCAMA,kBAAC,IAAD,CAAQI,MAAM,WAAd,mCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,kCAMA,kBAAC,IAAD,CAAQI,MAAM,UAAd,kCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,kCAMA,kBAAC,IAAD,CAAQI,MAAM,WAAd,mCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,kCAMA,kBAAC,IAAD,CAAQI,MAAM,QAAd,gCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,kCAMA,kBAAC,IAAD,CAAQI,MAAM,SAAd,iCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,kCAMA,kBAAC,IAAD,CAAQI,MAAM,QAAd,gCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,sCAUR,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMF,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,cAEE,uDAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQK,MAAM,WACZ,wBAAIJ,UAAU,iBAAd,cACA,4NAKA,6BACA,uBAAGA,UAAU,QAAb,2FAOR,kBAAC,IAAD,CAAMF,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,cAEE,+CAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEK,MAAM,OACNC,aAAW,GAFb,8BAMA,kBAAC,IAAD,CACED,MAAM,UACNE,KAAMV,EACNS,aAAW,EACXE,aAAcV,GAJhB,uBAMuBD,EANvB,YAOE,kBAAC,KAAD,CACEY,SAAO,EACPJ,MAAM,UACNK,MAAyB,GAAlBC,OAAOd,GACde,KAAK,KACLX,UAAU,UAId,kBAAC,IAAD,CAASY,QAAS,kBAAMf,EAAW,MAAnC","file":"static/js/56.32991cbf.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  CAlert,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CLink,\n  CProgress,\n  CRow\n} from '@coreui/react'\n\nconst Alerts = () => {\n  const [visible, setVisible] = React.useState(10)\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <div className=\"card-header-actions\">\n                <a href=\"https://coreui.github.io/components/alerts/\" rel=\"noreferrer noopener\" target=\"_blank\" className=\"card-header-action\">\n                  <small className=\"text-muted\">docs</small>\n                </a>\n              </div>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"primary\">\n                This is a primary alert — check it out!\n              </CAlert>\n              <CAlert color=\"secondary\">\n                This is a secondary alert — check it out!\n              </CAlert>\n              <CAlert color=\"success\">\n                This is a success alert — check it out!\n              </CAlert>\n              <CAlert color=\"danger\">\n                This is a danger alert — check it out!\n              </CAlert>\n              <CAlert color=\"warning\">\n                This is a warning alert — check it out!\n              </CAlert>\n              <CAlert color=\"info\">\n                This is a info alert — check it out!\n              </CAlert>\n              <CAlert color=\"light\">\n                This is a light alert — check it out!\n              </CAlert>\n              <CAlert color=\"dark\">\n                This is a dark alert — check it out!\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> use <code>.alert-link</code> to provide links</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"primary\">\n                {/*eslint-disable-next-line*/}\n                This is a primary alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"secondary\">\n                {/*eslint-disable-next-line*/}\n                This is a secondary alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"success\">\n                {/*eslint-disable-next-line*/}\n                This is a success alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"danger\">\n                {/*eslint-disable-next-line*/}\n                This is a danger alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"warning\">\n                {/*eslint-disable-next-line*/}\n                This is a warning alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"info\">\n                {/*eslint-disable-next-line*/}\n                This is a info alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"light\">\n                {/*eslint-disable-next-line*/}\n                This is a light alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"dark\">\n                {/*eslint-disable-next-line*/}\n                This is a dark alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> additional content</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"success\">\n                <h4 className=\"alert-heading\">Well done!</h4>\n                <p>\n                  Aww yeah, you successfully read this important alert message. This example text is going\n                  to run a bit longer so that you can see how spacing within an alert works with this kind\n                  of content.\n                </p>\n                <hr />\n                <p className=\"mb-0\">\n                  Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\n                </p>\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> dismissing</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert\n                color=\"info\"\n                closeButton\n              >\n                I am an dismissible alert!\n              </CAlert>\n              <CAlert\n                color=\"warning\"\n                show={visible}\n                closeButton\n                onShowChange={setVisible}\n              >\n                I will be closed in {visible} seconds!\n                <CProgress\n                  striped\n                  color=\"warning\"\n                  value={Number(visible) * 10}\n                  size=\"xs\"\n                  className=\"mb-3\"\n                />\n              </CAlert>\n\n              <CButton onClick={() => setVisible(10)}>\n                Reset timer\n              </CButton>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Alerts\n"],"sourceRoot":""}