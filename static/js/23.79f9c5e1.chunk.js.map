{"version":3,"sources":["../node_modules/@coreui/utils/src/deep-objects-merge.js","views/charts/ChartLineSimple.js","views/charts/ChartBarSimple.js","views/widgets/WidgetsDropdown.js","../node_modules/@coreui/utils/src/get-color.js"],"names":["deepObjectsMerge","target","source","Object","keys","key","assign","ChartLineSimple","props","borderColor","backgroundColor","pointHoverBackgroundColor","dataPoints","labels","pointed","attributes","pointHoverColor","defaultDatasets","data","getColor","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","Math","apply","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","straightOptions","defaultOptions","options","maintainAspectRatio","legend","computedDatasets","datasets","computedOptions","type","defaultProps","ChartBarSimple","barPercentage","categoryPercentage","labelss","WidgetsDropdown","User","JSON","parse","localStorage","getItem","useState","jumlah","chart","bulan","SuratKeluarChart","setSuratKeluarChart","SuratMasukChart","setSuratSuratMasukChart","RequestSuratChart","setRequestSuratChart","RequestSuratChartBelum","setRequestSuratChartBelum","SuratKeluar","field","tabel","set","a","status","axios","get","process","headers","Accept","Authorization","token","then","response","catch","error","console","log","useEffect","sm","lg","header","text","footerSlot","className","style","height","label","name","placement","disabled","tension","caret","rawProperty","element","document","body","property","getStyle"],"mappings":"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","file":"static/js/23.79f9c5e1.chunk.js","sourcesContent":["const deepObjectsMerge = (target, source) => {\r\n  // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\r\n  for (const key of Object.keys(source)) {\r\n    if (source[key] instanceof Object) {\r\n      Object.assign(source[key], deepObjectsMerge(target[key], source[key]))\r\n    }\r\n  }\r\n\r\n  // Join `target` and modified `source`\r\n  Object.assign(target || {}, source)\r\n  return target\r\n}\r\n\r\nexport default deepObjectsMerge\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor, deepObjectsMerge } from '@coreui/utils/src'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\n\r\nconst ChartLineSimple = props => {\r\n\r\n  const {\r\n    borderColor,\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    labels,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const pointHoverColor = (()=>{\r\n    if (pointHoverBackgroundColor) {\r\n      return pointHoverBackgroundColor\r\n    } else if (backgroundColor !== 'transparent') {\r\n      return backgroundColor\r\n    }\r\n    return borderColor\r\n  })()\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        borderColor: getColor(borderColor),\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointBackgroundColor: getColor(pointHoverColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverColor),\r\n        labels\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const pointedOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            offset: true,\r\n            gridLines: {\r\n              color: 'transparent',\r\n              zeroLineColor: 'transparent'\r\n            },\r\n            ticks: {\r\n              fontSize: 2,\r\n              fontColor: 'transparent'\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [\r\n          {\r\n            display: false,\r\n            ticks: {\r\n              display: false,\r\n              min: Math.min.apply(Math, dataPoints) - 5,\r\n              max: Math.max.apply(Math, dataPoints) + 5\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 1\r\n        },\r\n        point: {\r\n          radius: 4,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      }\r\n    }\r\n  })()\r\n\r\n  const straightOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 2\r\n        },\r\n        point: {\r\n          radius: 0,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      }\r\n    }\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    const options = pointed ? pointedOptions : straightOptions\r\n      return Object.assign({}, options, {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: false\r\n        }\r\n      })\r\n  })()\r\n\r\n  const computedDatasets = (() => {\r\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {})\r\n  })()\r\n\r\n  const computedOptions = (() => {\r\n    return deepObjectsMerge(defaultOptions, attributes.options || {})\r\n  })()\r\n\r\n  // render\r\n\r\n  return (\r\n    <CChartLine\r\n      {...attributes}\r\n      type=\"line\"\r\n      datasets={computedDatasets}\r\n      options={computedOptions}\r\n      labels={labels}\r\n    />\r\n  )\r\n}\r\n\r\nChartLineSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  borderColor: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  labels: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartLineSimple.defaultProps = {\r\n  borderColor: 'rgba(255,255,255,.55)',\r\n  backgroundColor: 'transparent',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  labels: ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober','November', 'Desember']\r\n};\r\n\r\nexport default ChartLineSimple\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor } from '@coreui/utils/src'\r\nimport { CChartBar } from '@coreui/react-chartjs'\r\n\r\nconst ChartBarSimple = props => {\r\n\r\n  const {\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    labels,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\r\n        labels: labels,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 1\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      }\r\n    }\r\n  })()\r\n\r\n  // render\r\n  return (\r\n    <CChartBar\r\n      {...attributes}\r\n      type=\"bar\"\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labelss={labels}\r\n    />\r\n  )\r\n}\r\n\r\nChartBarSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  labels: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartBarSimple.defaultProps = {\r\n  backgroundColor: 'rgba(0,0,0,.2)',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  labels: 'Sales'\r\n};\r\n\r\nexport default ChartBarSimple\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  CWidgetDropdown,\r\n  CRow,\r\n  CCol,\r\n  CDropdown,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownToggle\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport ChartLineSimple from '../charts/ChartLineSimple'\r\nimport ChartBarSimple from '../charts/ChartBarSimple'\r\nimport axios from 'axios';\r\n\r\nconst WidgetsDropdown = () => {\r\n  const User = JSON.parse(localStorage.getItem('user'));\r\n\r\n  const [SuratKeluarChart, setSuratKeluarChart] = useState({jumlah : '',chart : [],bulan : []})\r\n  const [SuratMasukChart, setSuratSuratMasukChart] = useState({jumlah : '',chart : [],bulan : []})\r\n  const [RequestSuratChart, setRequestSuratChart] = useState({jumlah : '',chart : [],bulan : []})\r\n  const [RequestSuratChartBelum, setRequestSuratChartBelum] = useState({jumlah : '',chart : [],bulan : []})\r\n\r\n  const SuratKeluar = async (field, tabel, set, status = null) => {\r\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/api/data-surat-keluar?field=${field}&tabel=${tabel}&status=${status}`, {\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: `Bearer ${User.token}`\r\n      }\r\n    }).then(response => {\r\n      set(response.data)\r\n    }).catch(error => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    SuratKeluar('tanggal_surat', 't_surat_keluar', setSuratKeluarChart, 2)\r\n    SuratKeluar('tanggal_terima', 't_surat_masuk', setSuratSuratMasukChart)\r\n    SuratKeluar('request', 't_surat_keluar', setRequestSuratChart)\r\n    SuratKeluar('belum', 't_surat_keluar', setRequestSuratChartBelum)\r\n  },[])\r\n\r\n  // render\r\n  return (\r\n    <CRow>\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-primary\"\r\n          header={SuratMasukChart.jumlah}\r\n          text=\"Surat Masuk\"\r\n          footerSlot={\r\n            <ChartLineSimple\r\n              pointed\r\n              className=\"c-chart-wrapper mt-3 mx-3\"\r\n              style={{height: '70px'}}\r\n              dataPoints={SuratMasukChart.chart}\r\n              pointHoverBackgroundColor=\"primary\"\r\n              label=\"Members\"\r\n              labels={SuratMasukChart.bulan}\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle color=\"transparent\">\r\n              <CIcon name=\"cil-settings\"/>\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              <CDropdownItem>Action</CDropdownItem>\r\n              <CDropdownItem>Another action</CDropdownItem>\r\n              <CDropdownItem>Something else here...</CDropdownItem>\r\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-info\"\r\n          header={SuratKeluarChart.jumlah}\r\n          text=\"Surat Keluar\"\r\n          footerSlot={\r\n            <ChartLineSimple\r\n              pointed\r\n              className=\"mt-3 mx-3\"\r\n              style={{height: '70px'}}\r\n              dataPoints={SuratKeluarChart.chart}\r\n              labels={SuratKeluarChart.bulan}\r\n              pointHoverBackgroundColor=\"info\"\r\n              options={{ elements: { line: { tension: 0.00001 }}}}\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle caret={false} color=\"transparent\">\r\n              <CIcon name=\"cil-location-pin\"/>\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              <CDropdownItem>Action</CDropdownItem>\r\n              <CDropdownItem>Another action</CDropdownItem>\r\n              <CDropdownItem>Something else here...</CDropdownItem>\r\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-warning\"\r\n          header={RequestSuratChart.jumlah}\r\n          text=\"Request Nomor Surat\"\r\n          footerSlot={\r\n            <ChartLineSimple\r\n              className=\"mt-3\"\r\n              style={{height: '70px'}}\r\n              backgroundColor=\"rgba(255,255,255,.2)\"\r\n              dataPoints={RequestSuratChart.chart}\r\n              options={{ elements: { line: { borderWidth: 2.5 }}}}\r\n              pointHoverBackgroundColor=\"warning\"\r\n              label=\"Members\"\r\n              labels={RequestSuratChart.bulan}\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle color=\"transparent\">\r\n              <CIcon name=\"cil-settings\"/>\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              <CDropdownItem>Action</CDropdownItem>\r\n              <CDropdownItem>Another action</CDropdownItem>\r\n              <CDropdownItem>Something else here...</CDropdownItem>\r\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-danger\"\r\n          header={RequestSuratChartBelum.jumlah}\r\n          text=\"Request Belum di Setujui\"\r\n          footerSlot={\r\n            <ChartBarSimple\r\n              className=\"mt-3 mx-3\"\r\n              style={{height: '70px'}}\r\n              backgroundColor=\"rgb(250, 152, 152)\"\r\n              dataPoints={RequestSuratChartBelum.chart}\r\n              label=\"Members\"\r\n              labels={RequestSuratChartBelum.bulan}\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle caret className=\"text-white\" color=\"transparent\">\r\n              <CIcon name=\"cil-settings\"/>\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              <CDropdownItem>Action</CDropdownItem>\r\n              <CDropdownItem>Another action</CDropdownItem>\r\n              <CDropdownItem>Something else here...</CDropdownItem>\r\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default WidgetsDropdown\r\n","import getStyle from './get-style'\r\n\r\nconst getColor = (rawProperty, element = document.body) => {\r\n  const property = `--${rawProperty}`\r\n  const style = getStyle(property, element)\r\n  return style ? style : rawProperty\r\n}\r\n\r\nexport default getColor\r\n"],"sourceRoot":""}